import rospy
#! /usr/bin/env python

import actionlib
import sys
import moveit_commander
import moveit_msgs.msg 
from geometry_msgs.msg import Pose
from std_srvs.srv import Trigger, EmptyResponse, Empty as E
from std_msgs.msg import Empty
from franka_gripper.msg import MoveAction, GraspAction, HomingAction, \
    StopAction, GraspActionGoal, MoveActionGoal, HomingActionGoal, \
        StopActionGoal, MoveGoal, StopGoal, GraspGoal, HomingGoal, GraspEpsilon
from franka_msgs.msg import ErrorRecoveryActionGoal
from group4.srv import  NamedMove, JointsMove, GripperOpen, GripperClose, PoseMove, GetPose, GetFloatList, Grasp, GraspResponse
from numpy import pi
import numpy as np

class ManipulationPenNode:
    def __init__(self):

        self.gripper_grasp_client = actionlib.SimpleActionClient("/franka_gripper/grasp", GraspAction)
        self.grip_pen_service = rospy.Service("grip_pen", Grasp,self.grip_pen)

    

    def grip_pen(self,req):
       
        self.pen_grip = GraspGoal(width=req.w, epsilon=GraspEpsilon(req.ei, req.eo), speed=req.s, force=req.f)
        self.gripper_grasp_client = actionlib.SimpleActionClient("/franka_gripper/grasp", GraspAction)
        self.gripper_grasp_client.send_goal(self.pen_grip)
        self.gripper_grasp_client.wait_for_result()

        return GraspResponse()




def main():
    rospy.init_node("man_pen")
    man_pen = ManipulationPenNode()
    rospy.spin()

if __name__ == '__main__':
    main()

