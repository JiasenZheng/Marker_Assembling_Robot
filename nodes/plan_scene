#!/usr/bin/env python

import rospy
import moveit_msgs.msg
import moveit_commander
import geometry_msgs.msg
from time import sleep
import math
from tf_conversions import transformations


class Scene:
    def __init__(self):
        self.scene = moveit_commander.PlanningSceneInterface()
        sleep(1)

        self.ground_pose = geometry_msgs.msg.PoseStamped()
        self.ground_pose.header.frame_id = "world"
        self.ground_pose.pose.orientation.w=1
        self.ground_pose.pose.position.z=-0.005   
        self.ground_pose.pose.position.x=0.55
        self.ground_name = "ground"
        self.scene.add_box(self.ground_name,self.ground_pose,size=(0.91,0.61,0.01))

        self.master_pose = geometry_msgs.msg.PoseStamped()
        self.master_pose.header.frame_id = "world"
        self.master_pose.pose.orientation.w=1
        self.master_pose.pose.position.x=0.5 
        self.master_pose.pose.position.y=-0.0       
        self.master_pose.pose.position.z=+0.025   
        self.master_name = "master"
        self.scene.add_box(self.master_name,self.master_pose,size=(0.1,0.1,0.05))



        self.pen_pose = geometry_msgs.msg.PoseStamped()
        self.pen_pose.header.frame_id = "world"
        self.pen_pose.pose.orientation.w=1
        self.pen_pose.pose.position.x=0.35 
        self.pen_pose.pose.position.y=-0.1       
        self.pen_pose.pose.position.z=+0.025   
        self.pen_name = "pen"
        self.scene.add_box(self.pen_name,self.pen_pose,size=(0.1,0.1,0.05))

        self.marker_pose = geometry_msgs.msg.PoseStamped()
        self.marker_pose.header.frame_id = "world"
        self.marker_pose.pose.orientation.w=1
        self.marker_pose.pose.position.x=0.35 
        self.marker_pose.pose.position.y=0.1       
        self.marker_pose.pose.position.z=+0.025   
        self.marker_name = "marker"
        self.scene.add_box(self.marker_name,self.marker_pose,size=(0.1,0.1,0.05))

        pass

def main():
    """
    Main function
    """
    rospy.init_node('scene')
    scene = Scene()
    rospy.spin()

if __name__ == '__main__':
    main()
